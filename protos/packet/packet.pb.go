// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: packet/packet.proto

package packet

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	BondingMode  int64                  `protobuf:"varint,2,opt,name=bonding_mode,json=bondingMode,proto3" json:"bonding_mode,omitempty"`
	Manufacturer *Metadata_Manufacturer `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Instance     *Metadata_Instance     `protobuf:"bytes,4,opt,name=instance,proto3" json:"instance,omitempty"`
	Custom       *Metadata_Custom       `protobuf:"bytes,5,opt,name=custom,proto3" json:"custom,omitempty"`
	Facility     *Metadata_Facility     `protobuf:"bytes,6,opt,name=facility,proto3" json:"facility,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Metadata) GetBondingMode() int64 {
	if x != nil {
		return x.BondingMode
	}
	return 0
}

func (x *Metadata) GetManufacturer() *Metadata_Manufacturer {
	if x != nil {
		return x.Manufacturer
	}
	return nil
}

func (x *Metadata) GetInstance() *Metadata_Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *Metadata) GetCustom() *Metadata_Custom {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *Metadata) GetFacility() *Metadata_Facility {
	if x != nil {
		return x.Facility
	}
	return nil
}

type Metadata_Manufacturer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *Metadata_Manufacturer) Reset() {
	*x = Metadata_Manufacturer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Manufacturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Manufacturer) ProtoMessage() {}

func (x *Metadata_Manufacturer) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Manufacturer.ProtoReflect.Descriptor instead.
func (*Metadata_Manufacturer) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Metadata_Manufacturer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metadata_Manufacturer) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type Metadata_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State               string                             `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Hostname            string                             `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	AllowPxe            bool                               `protobuf:"varint,4,opt,name=allow_pxe,json=allowPxe,proto3" json:"allow_pxe,omitempty"`
	Rescue              bool                               `protobuf:"varint,5,opt,name=rescue,proto3" json:"rescue,omitempty"`
	OperatingSystem     *Metadata_Instance_OperatingSystem `protobuf:"bytes,6,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	AlwaysPxe           bool                               `protobuf:"varint,7,opt,name=always_pxe,json=alwaysPxe,proto3" json:"always_pxe,omitempty"`
	IpxeScriptUrl       string                             `protobuf:"bytes,8,opt,name=ipxe_script_url,json=ipxeScriptUrl,proto3" json:"ipxe_script_url,omitempty"`
	Ips                 []*Metadata_Instance_IP            `protobuf:"bytes,9,rep,name=ips,proto3" json:"ips,omitempty"`
	Userdata            string                             `protobuf:"bytes,10,opt,name=userdata,proto3" json:"userdata,omitempty"`
	CryptedRootPassword string                             `protobuf:"bytes,11,opt,name=crypted_root_password,json=cryptedRootPassword,proto3" json:"crypted_root_password,omitempty"`
	Tags                []string                           `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	Storage             *Metadata_Instance_Storage         `protobuf:"bytes,13,opt,name=storage,proto3" json:"storage,omitempty"`
	SshKeys             []string                           `protobuf:"bytes,14,rep,name=ssh_keys,json=sshKeys,proto3" json:"ssh_keys,omitempty"`
	NetworkReady        bool                               `protobuf:"varint,15,opt,name=network_ready,json=networkReady,proto3" json:"network_ready,omitempty"`
}

func (x *Metadata_Instance) Reset() {
	*x = Metadata_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance) ProtoMessage() {}

func (x *Metadata_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance.ProtoReflect.Descriptor instead.
func (*Metadata_Instance) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Metadata_Instance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metadata_Instance) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Metadata_Instance) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Metadata_Instance) GetAllowPxe() bool {
	if x != nil {
		return x.AllowPxe
	}
	return false
}

func (x *Metadata_Instance) GetRescue() bool {
	if x != nil {
		return x.Rescue
	}
	return false
}

func (x *Metadata_Instance) GetOperatingSystem() *Metadata_Instance_OperatingSystem {
	if x != nil {
		return x.OperatingSystem
	}
	return nil
}

func (x *Metadata_Instance) GetAlwaysPxe() bool {
	if x != nil {
		return x.AlwaysPxe
	}
	return false
}

func (x *Metadata_Instance) GetIpxeScriptUrl() string {
	if x != nil {
		return x.IpxeScriptUrl
	}
	return ""
}

func (x *Metadata_Instance) GetIps() []*Metadata_Instance_IP {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *Metadata_Instance) GetUserdata() string {
	if x != nil {
		return x.Userdata
	}
	return ""
}

func (x *Metadata_Instance) GetCryptedRootPassword() string {
	if x != nil {
		return x.CryptedRootPassword
	}
	return ""
}

func (x *Metadata_Instance) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Metadata_Instance) GetStorage() *Metadata_Instance_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *Metadata_Instance) GetSshKeys() []string {
	if x != nil {
		return x.SshKeys
	}
	return nil
}

func (x *Metadata_Instance) GetNetworkReady() bool {
	if x != nil {
		return x.NetworkReady
	}
	return false
}

type Metadata_Custom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreinstalledOperatingSystemVersion *Metadata_Instance_OperatingSystem `protobuf:"bytes,1,opt,name=preinstalled_operating_system_version,json=preinstalledOperatingSystemVersion,proto3" json:"preinstalled_operating_system_version,omitempty"`
	PrivateSubnets                     []string                           `protobuf:"bytes,2,rep,name=private_subnets,json=privateSubnets,proto3" json:"private_subnets,omitempty"`
}

func (x *Metadata_Custom) Reset() {
	*x = Metadata_Custom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Custom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Custom) ProtoMessage() {}

func (x *Metadata_Custom) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Custom.ProtoReflect.Descriptor instead.
func (*Metadata_Custom) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Metadata_Custom) GetPreinstalledOperatingSystemVersion() *Metadata_Instance_OperatingSystem {
	if x != nil {
		return x.PreinstalledOperatingSystemVersion
	}
	return nil
}

func (x *Metadata_Custom) GetPrivateSubnets() []string {
	if x != nil {
		return x.PrivateSubnets
	}
	return nil
}

type Metadata_Facility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanSlug        string `protobuf:"bytes,1,opt,name=plan_slug,json=planSlug,proto3" json:"plan_slug,omitempty"`
	PlanVersionSlug string `protobuf:"bytes,2,opt,name=plan_version_slug,json=planVersionSlug,proto3" json:"plan_version_slug,omitempty"`
	FacilityCode    string `protobuf:"bytes,3,opt,name=facility_code,json=facilityCode,proto3" json:"facility_code,omitempty"`
}

func (x *Metadata_Facility) Reset() {
	*x = Metadata_Facility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Facility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Facility) ProtoMessage() {}

func (x *Metadata_Facility) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Facility.ProtoReflect.Descriptor instead.
func (*Metadata_Facility) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Metadata_Facility) GetPlanSlug() string {
	if x != nil {
		return x.PlanSlug
	}
	return ""
}

func (x *Metadata_Facility) GetPlanVersionSlug() string {
	if x != nil {
		return x.PlanVersionSlug
	}
	return ""
}

func (x *Metadata_Facility) GetFacilityCode() string {
	if x != nil {
		return x.FacilityCode
	}
	return ""
}

type Metadata_Instance_OperatingSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug     string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Distro   string `protobuf:"bytes,2,opt,name=distro,proto3" json:"distro,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	ImageTag string `protobuf:"bytes,4,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"`
	OsSlug   string `protobuf:"bytes,5,opt,name=os_slug,json=osSlug,proto3" json:"os_slug,omitempty"`
}

func (x *Metadata_Instance_OperatingSystem) Reset() {
	*x = Metadata_Instance_OperatingSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_OperatingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_OperatingSystem) ProtoMessage() {}

func (x *Metadata_Instance_OperatingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_OperatingSystem.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_OperatingSystem) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Metadata_Instance_OperatingSystem) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Metadata_Instance_OperatingSystem) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *Metadata_Instance_OperatingSystem) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata_Instance_OperatingSystem) GetImageTag() string {
	if x != nil {
		return x.ImageTag
	}
	return ""
}

func (x *Metadata_Instance_OperatingSystem) GetOsSlug() string {
	if x != nil {
		return x.OsSlug
	}
	return ""
}

type Metadata_Instance_IP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Netmask    string `protobuf:"bytes,2,opt,name=netmask,proto3" json:"netmask,omitempty"`
	Gateway    string `protobuf:"bytes,3,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Family     int64  `protobuf:"varint,4,opt,name=family,proto3" json:"family,omitempty"`
	Public     bool   `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`
	Management bool   `protobuf:"varint,6,opt,name=management,proto3" json:"management,omitempty"`
}

func (x *Metadata_Instance_IP) Reset() {
	*x = Metadata_Instance_IP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_IP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_IP) ProtoMessage() {}

func (x *Metadata_Instance_IP) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_IP.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_IP) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Metadata_Instance_IP) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Metadata_Instance_IP) GetNetmask() string {
	if x != nil {
		return x.Netmask
	}
	return ""
}

func (x *Metadata_Instance_IP) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *Metadata_Instance_IP) GetFamily() int64 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *Metadata_Instance_IP) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *Metadata_Instance_IP) GetManagement() bool {
	if x != nil {
		return x.Management
	}
	return false
}

type Metadata_Instance_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disks       []*Metadata_Instance_Storage_Disk       `protobuf:"bytes,1,rep,name=disks,proto3" json:"disks,omitempty"`
	Raid        []*Metadata_Instance_Storage_RAID       `protobuf:"bytes,2,rep,name=raid,proto3" json:"raid,omitempty"`
	Filesystems []*Metadata_Instance_Storage_Filesystem `protobuf:"bytes,3,rep,name=filesystems,proto3" json:"filesystems,omitempty"`
}

func (x *Metadata_Instance_Storage) Reset() {
	*x = Metadata_Instance_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage) ProtoMessage() {}

func (x *Metadata_Instance_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Metadata_Instance_Storage) GetDisks() []*Metadata_Instance_Storage_Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *Metadata_Instance_Storage) GetRaid() []*Metadata_Instance_Storage_RAID {
	if x != nil {
		return x.Raid
	}
	return nil
}

func (x *Metadata_Instance_Storage) GetFilesystems() []*Metadata_Instance_Storage_Filesystem {
	if x != nil {
		return x.Filesystems
	}
	return nil
}

type Metadata_Instance_Storage_Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device     string                                      `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	WipeTable  bool                                        `protobuf:"varint,2,opt,name=wipe_table,json=wipeTable,proto3" json:"wipe_table,omitempty"`
	Partitions []*Metadata_Instance_Storage_Disk_Partition `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
}

func (x *Metadata_Instance_Storage_Disk) Reset() {
	*x = Metadata_Instance_Storage_Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_Disk) ProtoMessage() {}

func (x *Metadata_Instance_Storage_Disk) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_Disk.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_Disk) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 0}
}

func (x *Metadata_Instance_Storage_Disk) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Metadata_Instance_Storage_Disk) GetWipeTable() bool {
	if x != nil {
		return x.WipeTable
	}
	return false
}

func (x *Metadata_Instance_Storage_Disk) GetPartitions() []*Metadata_Instance_Storage_Disk_Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type Metadata_Instance_Storage_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path     string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Contents string `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	Mode     int64  `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	Uid      int64  `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid      int64  `protobuf:"varint,5,opt,name=gid,proto3" json:"gid,omitempty"`
}

func (x *Metadata_Instance_Storage_File) Reset() {
	*x = Metadata_Instance_Storage_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_File) ProtoMessage() {}

func (x *Metadata_Instance_Storage_File) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_File.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_File) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 1}
}

func (x *Metadata_Instance_Storage_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Metadata_Instance_Storage_File) GetContents() string {
	if x != nil {
		return x.Contents
	}
	return ""
}

func (x *Metadata_Instance_Storage_File) GetMode() int64 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *Metadata_Instance_Storage_File) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *Metadata_Instance_Storage_File) GetGid() int64 {
	if x != nil {
		return x.Gid
	}
	return 0
}

type Metadata_Instance_Storage_Mount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device string                                             `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Format string                                             `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Files  []*Metadata_Instance_Storage_File                  `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
	Create *Metadata_Instance_Storage_Mount_FilesystemOptions `protobuf:"bytes,4,opt,name=create,proto3" json:"create,omitempty"`
	Point  string                                             `protobuf:"bytes,5,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *Metadata_Instance_Storage_Mount) Reset() {
	*x = Metadata_Instance_Storage_Mount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_Mount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_Mount) ProtoMessage() {}

func (x *Metadata_Instance_Storage_Mount) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_Mount.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_Mount) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 2}
}

func (x *Metadata_Instance_Storage_Mount) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Metadata_Instance_Storage_Mount) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *Metadata_Instance_Storage_Mount) GetFiles() []*Metadata_Instance_Storage_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Metadata_Instance_Storage_Mount) GetCreate() *Metadata_Instance_Storage_Mount_FilesystemOptions {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *Metadata_Instance_Storage_Mount) GetPoint() string {
	if x != nil {
		return x.Point
	}
	return ""
}

type Metadata_Instance_Storage_Filesystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mount *Metadata_Instance_Storage_Mount `protobuf:"bytes,1,opt,name=mount,proto3" json:"mount,omitempty"`
}

func (x *Metadata_Instance_Storage_Filesystem) Reset() {
	*x = Metadata_Instance_Storage_Filesystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_Filesystem) ProtoMessage() {}

func (x *Metadata_Instance_Storage_Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_Filesystem.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_Filesystem) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 3}
}

func (x *Metadata_Instance_Storage_Filesystem) GetMount() *Metadata_Instance_Storage_Mount {
	if x != nil {
		return x.Mount
	}
	return nil
}

type Metadata_Instance_Storage_RAID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level   string   `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	Devices []string `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
	Spare   int64    `protobuf:"varint,4,opt,name=spare,proto3" json:"spare,omitempty"`
}

func (x *Metadata_Instance_Storage_RAID) Reset() {
	*x = Metadata_Instance_Storage_RAID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_RAID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_RAID) ProtoMessage() {}

func (x *Metadata_Instance_Storage_RAID) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_RAID.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_RAID) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 4}
}

func (x *Metadata_Instance_Storage_RAID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata_Instance_Storage_RAID) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Metadata_Instance_Storage_RAID) GetDevices() []string {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Metadata_Instance_Storage_RAID) GetSpare() int64 {
	if x != nil {
		return x.Spare
	}
	return 0
}

type Metadata_Instance_Storage_Disk_Partition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label    string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Number   int64  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Start    int64  `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
	TypeGuid string `protobuf:"bytes,5,opt,name=type_guid,json=typeGuid,proto3" json:"type_guid,omitempty"`
}

func (x *Metadata_Instance_Storage_Disk_Partition) Reset() {
	*x = Metadata_Instance_Storage_Disk_Partition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_Disk_Partition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_Disk_Partition) ProtoMessage() {}

func (x *Metadata_Instance_Storage_Disk_Partition) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_Disk_Partition.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_Disk_Partition) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 0, 0}
}

func (x *Metadata_Instance_Storage_Disk_Partition) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Metadata_Instance_Storage_Disk_Partition) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Metadata_Instance_Storage_Disk_Partition) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Metadata_Instance_Storage_Disk_Partition) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Metadata_Instance_Storage_Disk_Partition) GetTypeGuid() string {
	if x != nil {
		return x.TypeGuid
	}
	return ""
}

type Metadata_Instance_Storage_Mount_FilesystemOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Force   bool     `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	Options []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *Metadata_Instance_Storage_Mount_FilesystemOptions) Reset() {
	*x = Metadata_Instance_Storage_Mount_FilesystemOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_packet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_Instance_Storage_Mount_FilesystemOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_Instance_Storage_Mount_FilesystemOptions) ProtoMessage() {}

func (x *Metadata_Instance_Storage_Mount_FilesystemOptions) ProtoReflect() protoreflect.Message {
	mi := &file_packet_packet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_Instance_Storage_Mount_FilesystemOptions.ProtoReflect.Descriptor instead.
func (*Metadata_Instance_Storage_Mount_FilesystemOptions) Descriptor() ([]byte, []int) {
	return file_packet_packet_proto_rawDescGZIP(), []int{0, 1, 2, 2, 0}
}

func (x *Metadata_Instance_Storage_Mount_FilesystemOptions) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *Metadata_Instance_Storage_Mount_FilesystemOptions) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_packet_packet_proto protoreflect.FileDescriptor

var file_packet_packet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22,
	0x9b, 0x18, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x63, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62,
	0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x57, 0x0a, 0x08, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x57, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c,
	0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x61, 0x63,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a,
	0x32, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x1a, 0xe8, 0x11, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x78, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x78, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x63, 0x75, 0x65, 0x12, 0x76, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x5f, 0x70, 0x78, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x77, 0x61, 0x79, 0x73, 0x50, 0x78, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x70, 0x78, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x70, 0x78, 0x65, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x50, 0x0a, 0x03, 0x69, 0x70, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x49, 0x50, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x6f, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x5d, 0x0a, 0x07,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x73, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x73, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x61, 0x64, 0x79, 0x1a, 0x8d, 0x01, 0x0a, 0x0f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x53, 0x6c, 0x75, 0x67, 0x1a, 0xa2, 0x01, 0x0a, 0x02,
	0x49, 0x50, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x6d, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x9b, 0x0a, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x5e, 0x0a, 0x05,
	0x64, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62,
	0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x64, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x5c, 0x0a, 0x04,
	0x72, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65,
	0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x41, 0x49, 0x44, 0x52, 0x04, 0x72, 0x61, 0x69, 0x64, 0x12, 0x70, 0x0a, 0x0b, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x4e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x0b, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb4, 0x02, 0x0a,
	0x04, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x69, 0x70, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x77, 0x69, 0x70, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x72, 0x0a, 0x0a,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x52, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69,
	0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x80, 0x01, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x1a, 0x6e, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x67, 0x69, 0x64, 0x1a, 0xe7, 0x02, 0x0a, 0x05, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x5e, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x73, 0x0a,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5b, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65,
	0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x43, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x6d, 0x0a,
	0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x5f, 0x0a, 0x05, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65,
	0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x60, 0x0a, 0x04,
	0x52, 0x41, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x61, 0x72, 0x65, 0x1a, 0xd2,
	0x01, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x9e, 0x01, 0x0a, 0x25, 0x70, 0x72,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x62, 0x65, 0x6c,
	0x6c, 0x2e, 0x74, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x22, 0x70, 0x72, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x73, 0x1a, 0x78, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x6e, 0x6b,
	0x65, 0x72, 0x62, 0x65, 0x6c, 0x6c, 0x2f, 0x74, 0x69, 0x6e, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_packet_packet_proto_rawDescOnce sync.Once
	file_packet_packet_proto_rawDescData = file_packet_packet_proto_rawDesc
)

func file_packet_packet_proto_rawDescGZIP() []byte {
	file_packet_packet_proto_rawDescOnce.Do(func() {
		file_packet_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_packet_proto_rawDescData)
	})
	return file_packet_packet_proto_rawDescData
}

var file_packet_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_packet_packet_proto_goTypes = []interface{}{
	(*Metadata)(nil),                                          // 0: github.com.tinkerbell.tink.protos.packet.Metadata
	(*Metadata_Manufacturer)(nil),                             // 1: github.com.tinkerbell.tink.protos.packet.Metadata.Manufacturer
	(*Metadata_Instance)(nil),                                 // 2: github.com.tinkerbell.tink.protos.packet.Metadata.Instance
	(*Metadata_Custom)(nil),                                   // 3: github.com.tinkerbell.tink.protos.packet.Metadata.Custom
	(*Metadata_Facility)(nil),                                 // 4: github.com.tinkerbell.tink.protos.packet.Metadata.Facility
	(*Metadata_Instance_OperatingSystem)(nil),                 // 5: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.OperatingSystem
	(*Metadata_Instance_IP)(nil),                              // 6: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.IP
	(*Metadata_Instance_Storage)(nil),                         // 7: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage
	(*Metadata_Instance_Storage_Disk)(nil),                    // 8: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Disk
	(*Metadata_Instance_Storage_File)(nil),                    // 9: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.File
	(*Metadata_Instance_Storage_Mount)(nil),                   // 10: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount
	(*Metadata_Instance_Storage_Filesystem)(nil),              // 11: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Filesystem
	(*Metadata_Instance_Storage_RAID)(nil),                    // 12: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.RAID
	(*Metadata_Instance_Storage_Disk_Partition)(nil),          // 13: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Disk.Partition
	(*Metadata_Instance_Storage_Mount_FilesystemOptions)(nil), // 14: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount.FilesystemOptions
}
var file_packet_packet_proto_depIdxs = []int32{
	1,  // 0: github.com.tinkerbell.tink.protos.packet.Metadata.manufacturer:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Manufacturer
	2,  // 1: github.com.tinkerbell.tink.protos.packet.Metadata.instance:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance
	3,  // 2: github.com.tinkerbell.tink.protos.packet.Metadata.custom:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Custom
	4,  // 3: github.com.tinkerbell.tink.protos.packet.Metadata.facility:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Facility
	5,  // 4: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.operating_system:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.OperatingSystem
	6,  // 5: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.ips:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.IP
	7,  // 6: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.storage:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage
	5,  // 7: github.com.tinkerbell.tink.protos.packet.Metadata.Custom.preinstalled_operating_system_version:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.OperatingSystem
	8,  // 8: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.disks:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Disk
	12, // 9: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.raid:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.RAID
	11, // 10: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.filesystems:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Filesystem
	13, // 11: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Disk.partitions:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Disk.Partition
	9,  // 12: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount.files:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.File
	14, // 13: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount.create:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount.FilesystemOptions
	10, // 14: github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Filesystem.mount:type_name -> github.com.tinkerbell.tink.protos.packet.Metadata.Instance.Storage.Mount
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_packet_packet_proto_init() }
func file_packet_packet_proto_init() {
	if File_packet_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Manufacturer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Custom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Facility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_OperatingSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_IP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_Mount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_Filesystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_RAID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_Disk_Partition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_packet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_Instance_Storage_Mount_FilesystemOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packet_packet_proto_goTypes,
		DependencyIndexes: file_packet_packet_proto_depIdxs,
		MessageInfos:      file_packet_packet_proto_msgTypes,
	}.Build()
	File_packet_packet_proto = out.File
	file_packet_packet_proto_rawDesc = nil
	file_packet_packet_proto_goTypes = nil
	file_packet_packet_proto_depIdxs = nil
}
