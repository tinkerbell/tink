version: '2.1'
services:
  certs:
    build: tls
    volumes:
      - ./certs:/certs

  tink-server:
    image: quay.io/tinkerbell/tink:latest
    environment:
      FACILITY: ${FACILITY:-onprem}
      PACKET_ENV: ${PACKET_ENV:-testing}
      PACKET_VERSION: ${PACKET_VERSION:-ignored}
      ROLLBAR_TOKEN: ${ROLLBAR_TOKEN:-ignored}
      ROLLBAR_DISABLE: ${ROLLBAR_DISABLE:-1}
      PGDATABASE: tinkerbell
      PGHOST: db
      PGPASSWORD: tinkerbell
      PGPORT: 5432
      PGSSLMODE: disable
      PGUSER: tinkerbell
    depends_on:
      fluentbit:
        condition: service_started
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- 127.0.0.1:42114/cert"]
      interval: 5s
      timeout: 2s
      retries: 30
    volumes:
      - ./certs:/certs/${FACILITY}
    logging:
      driver: fluentd
      options:
        tag: tink-server
    ports:
      - 42113:42113/tcp
      - 42114:42114/tcp

  db:
    build:
      context: db
    environment:
      POSTGRES_DB: tinkerbell
      POSTGRES_PASSWORD: tinkerbell
      POSTGRES_USER: tinkerbell
    ports:
      - 5432:5432
    depends_on:
      fluentbit:
          condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tinkerbell"]
      interval: 1s
      timeout:  1s
      retries: 30
    logging:
      driver: fluentd
      options:
        tag: db

  tink-cli:
    image: quay.io/tinkerbell/tink-cli:latest
    environment:
      TINKERBELL_GRPC_AUTHORITY: 127.0.0.1:42113
      TINKERBELL_CERT_URL: http://127.0.0.1:42114/cert
    logging:
      driver: fluentd
      options:
        tag: tink-cli
    depends_on:
      tink-server:
        condition: service_healthy
      db:
        condition: service_healthy
    network_mode: host

  registry:
    build:
      context: registry
      args:
        REGISTRY_USERNAME: $TINKERBELL_REGISTRY_USER
        REGISTRY_PASSWORD: $TINKERBELL_REGISTRY_PASSWORD
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.pem
      REGISTRY_HTTP_TLS_KEY: /certs/server-key.pem
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    volumes:
      - ./certs:/certs
    depends_on:
      fluentbit:
        condition: service_started
    logging:
      driver: fluentd
      options:
        tag: registry
    network_mode: host

  boots:
    image: quay.io/tinkerbell/boots:latest
    network_mode: host
    command: -dhcp-addr 0.0.0.0:67 -tftp-addr $TINKERBELL_HOST_IP:69 -http-addr $TINKERBELL_HOST_IP:80 -log-level DEBUG
    environment:
      API_AUTH_TOKEN: ${PACKET_API_AUTH_TOKEN:-ignored}
      API_CONSUMER_TOKEN: ${PACKET_CONSUMER_TOKEN:-ignored}
      FACILITY_CODE: ${FACILITY:-onprem}
      PACKET_ENV: ${PACKET_ENV:-testing}
      PACKET_VERSION: ${PACKET_VERSION:-ignored}
      ROLLBAR_TOKEN: ${ROLLBAR_TOKEN:-ignored}
      ROLLBAR_DISABLE: ${ROLLBAR_DISABLE:-1}
      MIRROR_HOST: ${NGINX_IP:-127.0.0.1}
      CACHER_GRPC_AUTHORITY: 127.0.0.1:42111
      CACHER_CERT_URL: http://127.0.0.1:42112/cert
      DNS_SERVERS: 8.8.8.8
      PUBLIC_IP: $TINKERBELL_HOST_IP
      BOOTP_BIND: $TINKERBELL_HOST_IP:67
      HTTP_BIND: $TINKERBELL_HOST_IP:80
      SYSLOG_BIND: $TINKERBELL_HOST_IP:514
      TFTP_BIND: $TINKERBELL_HOST_IP:69
      DOCKER_REGISTRY: $TINKERBELL_HOST_IP
      REGISTRY_USERNAME: $TINKERBELL_REGISTRY_USER
      REGISTRY_PASSWORD: $TINKERBELL_REGISTRY_PASSWORD
      TINKERBELL_GRPC_AUTHORITY: $TINKERBELL_HOST_IP:42113
      TINKERBELL_CERT_URL: http://$TINKERBELL_HOST_IP:42114/cert
      ELASTIC_SEARCH_URL: $TINKERBELL_HOST_IP:9200
    depends_on:
      fluentbit:
        condition: service_started
      cacher:
        condition: service_started
    logging:
        driver: fluentd
        options:
          tag: boots
    ports:
      - $TINKERBELL_HOST_IP:80:80/tcp
      - 67:67/udp
      - 69:69/udp
    
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - $TINKERBELL_NGINX_IP:80:80/tcp
    volumes:
      - /packet/nginx/:/usr/share/nginx/html/
    logging:
      driver: fluentd
      options:
        tag: nginx

  elasticsearch:
    image: elasticsearch:7.3.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node

  kibana:
    image: kibana:7.3.0
    depends_on:
      - elasticsearch
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601

  fluentbit:
    image: fluent/fluent-bit:1.3
    ports:
      - 24224:24224
      - 24224:24224/udp
    depends_on:
      - elasticsearch
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

  cacher:
    image: quay.io/packet/cacher:workflow
    environment:
      FACILITY: ${FACILITY:-onprem}
      PACKET_API_AUTH_TOKEN: ${PACKET_API_AUTH_TOKEN}
      PACKET_API_URL: ${PACKET_API_URL}
      PACKET_CONSUMER_TOKEN: ${PACKET_CONSUMER_TOKEN-ignored}
      PACKET_ENV: testing
      PACKET_VERSION: ${PACKET_VERSION:-ignored}
      PGDATABASE: tinkerbell
      PGHOST: db
      PGPASSWORD: tinkerbell
      PGPORT: 5432
      PGSSLMODE: disable
      PGUSER: tinkerbell
      ROLLBAR_TOKEN: ${ROLLBAR_TOKEN-ignored}
    volumes:
      - ./certs:/certs/${FACILITY}
    logging:
      driver: fluentd
      options:
        tag: cacher 
    depends_on:
      fluentbit:
        condition: service_started
      db:
        condition: service_healthy
    ports:
      - 42111:42111/tcp
      - 42112:42112/tcp

  hegel:
    image: quay.io/tinkerbell/hegel:latest
    network_mode: host
    environment:
      ROLLBAR_TOKEN: ${ROLLBAR_TOKEN-ignored}
      ROLLBAR_DISABLE: 1
      PACKET_ENV: testing
      PACKET_VERSION: ${PACKET_VERSION:-ignored}  
      GRPC_PORT: 42115
      HEGEL_FACILITY: ${FACILITY:-onprem}
      HEGEL_USE_TLS: 0
      CACHER_CERT_URL: http://127.0.0.1:42112/cert
      CACHER_GRPC_AUTHORITY: 127.0.0.1:42111
    depends_on:
      fluentbit:
        condition: service_started
      cacher:
        condition: service_started
    logging:
      driver: fluentd
      options:
        tag: hegel
